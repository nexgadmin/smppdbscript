#!/bin/bash
satrt1=$(date)
echo $satrt1 StartDateTime
echo ""

export path1=/data01/shfiles/ra_reports/credit_limit

kill1=$(ps -eo comm,pid,etimes,cmd | grep credit_limit.sh | awk '{if($3 > 1800) print $2}')

if [ -z "$kill1" ]
then
echo "NO LONG RUNNING PROCESS FOUND TO BE KILL"
else
echo "LONG PROCESS KILLED"
kill -9 $kill1
fi

cd ${path1}
rm -f ${path1}/*.txt

month1=$(date --date="-2 days" +%Y%m | awk '{print "MONTH_"int($0)}')
date1=$(date --date="-2 days" +%Y-%m | awk '{print $0"-01"}')
echo $month1

mysql -h172.19.4.103 -uroot -pp*E9@r#Xnh nexg_hunt -vvv -e "
DELETE FROM CUSTOMER_BILLING WHERE BILLING_MONTH>='"$date1"';

INSERT INTO nexg_hunt.CUSTOMER_BILLING
SELECT A.*,IFNULL(ROUND((SMS_CHARGE + DLT_CHARGE),2),0) AS BILL_AMOUNT,IFNULL(ROUND((((SMS_CHARGE + DLT_CHARGE) * 18)/100),2),0) AS GST,
IFNULL(ROUND((SMS_CHARGE + DLT_CHARGE + (((SMS_CHARGE + DLT_CHARGE) * 18)/100)),2),0) AS BILLED_AMOUNT,NOW() AS INSERT_DATE FROM (
SELECT CONCAT(LEFT(EVENT_DATE,7),'-01') AS BILLING_MONTH,CUSTOMER_CODE,A.USER_NAME,CUSTOMER_NAME,EMPLOYEE_NAME AS ACCOUNT_MANAGER,
CUSTOMER_STATUS,CUSTOMER_TYPE_CODE,SERVICE_NAME,SERVICE_TYPE,CHARGE_TYPE,IFNULL(CUSTOMER_BASE_RATE,0) AS CUSTOMER_BASE_RATE,
IFNULL(DLT_RATE,0) AS DLT_RATE,CHARGERATEUNIT,IFNULL(SUM(SUBMITION),0) AS SUBMITED,IFNULL(SUM(DELIVERED),0) AS DELIVERED
,IFNULL(ROUND(SUM(CASE WHEN CHARGE_TYPE='OSUB' THEN SUBMITION WHEN CHARGE_TYPE='ODLV' THEN DELIVERED ELSE 0 END) * (CUSTOMER_BASE_RATE),2),0) AS SMS_CHARGE
,IFNULL(ROUND(SUM(SUBMITION) * (CASE WHEN SERVICE_TYPE='Government' THEN 0 ELSE DLT_RATE END),2),0)  AS DLT_CHARGE
FROM sms_cdrs.DAILY_SUMMARY PARTITION("$month1") A
LEFT JOIN (SELECT * FROM nexg_hunt.CRM_RATE_MST) B ON B.USER_NAME=A.USER_NAME
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13) A;

INSERT INTO CUSTOMER_OUTSTANDING (CUSTOMER_CODE,UNBILLED_AMOUNT)
SELECT CUSTOMER_CODE,SUM(BILLED_AMOUNT) AS BILLED_AMOUNT FROM CUSTOMER_BILLING
WHERE BILLING_MONTH>='"$date1"' AND CUSTOMER_TYPE_CODE='POST' AND CUSTOMER_CODE NOT IN (
SELECT CUSTOMER_CODE FROM CUSTOMER_OUTSTANDING)
GROUP BY 1;

UPDATE CUSTOMER_OUTSTANDING SET UNBILLED_AMOUNT=0;

UPDATE CUSTOMER_OUTSTANDING A, (SELECT CUSTOMER_CODE,SUM(BILLED_AMOUNT) AS BILLED_AMOUNT FROM CUSTOMER_BILLING 
WHERE BILLING_MONTH>='"$date1"' AND CUSTOMER_TYPE_CODE='POST'
GROUP BY 1) B SET A.UNBILLED_AMOUNT=B.BILLED_AMOUNT WHERE A.CUSTOMER_CODE=B.CUSTOMER_CODE;
" 2>/dev/null

date2=$(date --date="-0 days" +%d | awk '{print int($0)}')

if [[ $date2 -eq 3 ]]
then
date3=$(date --date="-3 days" +%Y-%m | awk '{print $0"-01"}')

mysql -h172.19.4.103 -uroot -pp*E9@r#Xnh nexg_hunt -vvv -e "

UPDATE CUSTOMER_OUTSTANDING A, (SELECT CUSTOMER_CODE,SUM(BILLED_AMOUNT) AS BILLED_AMOUNT FROM CUSTOMER_BILLING 
WHERE BILLING_MONTH='"$date3"' AND CUSTOMER_TYPE_CODE='POST'
GROUP BY 1) B SET A.OUTSTANDING_AMOUNT=(A.OUTSTANDING_AMOUNT + B.BILLED_AMOUNT) WHERE A.CUSTOMER_CODE=B.CUSTOMER_CODE;

" 2>/dev/null

echo "Last Month OUTSTANDING_AMOUNT Updated"
fi

mysql -h172.19.4.103 -uroot -pp*E9@r#Xnh nexg_hunt -e "
SELECT A.CUSTOMER_CODE,B.CUSTOMER_NAME,B.CREATION_DATE AS ACTIATION_DATE,B.CUSTOMER_TYPE,A.CREDIT_LIMIT,
ROUND(A.OUTSTANDING_AMOUNT,0) AS OUTSTANDING_AMOUNT ,ROUND(A.UNBILLED_AMOUNT,0) AS UNBILLED_AMOUNT
,ROUND((A.OUTSTANDING_AMOUNT + A.UNBILLED_AMOUNT),0) AS TOTAL_OUTSTANDING
,CONCAT(IFNULL(ROUND((((OUTSTANDING_AMOUNT + UNBILLED_AMOUNT) / CREDIT_LIMIT) * 100),0),0),'%') AS CREDIT_LIMIT_EXCEED_PCT,EMAIL_ID,SALES_EMP_NAME,EMPLOYEE_EMAILID
FROM CUSTOMER_OUTSTANDING A
LEFT JOIN (SELECT CUSTOMER_CODE,CREATION_DATE,UPPER(CUSTOMER_NAME) AS CUSTOMER_NAME,CUSTOMER_TYPE,EMAIL_ID,SALES_EMP_NAME,EMPLOYEE_EMAILID FROM CUSTOMER_MST) B
ON B.CUSTOMER_CODE=A.CUSTOMER_CODE
WHERE IFNULL(ROUND((((OUTSTANDING_AMOUNT + UNBILLED_AMOUNT) / CREDIT_LIMIT) * 100),2),0) >70
ORDER BY IFNULL(ROUND((((OUTSTANDING_AMOUNT + UNBILLED_AMOUNT) / CREDIT_LIMIT) * 100),2),0) DESC;" 2>/dev/null | sed 's/\t/|/g;' >${path1}/data.txt

find ${path1}/data.txt -type f -size 0 -exec rm -rvf {} \;

cat data.txt | awk -F"|" '{print $2"|"$3"|"$5"|"$6"|"$7"|"$8"|"$9}' >${path1}/mail.txt
cat mail.txt | awk -F"|" '{for (i=4;i<=NF;++i) s[i]+=$i;j=NF} END {for(i=4;i<=j;++i) printf "|%s",s[i]; printf "\n";}' | awk -F"|" '{print "TOTAL""|||"$2"|"$3"|"$4"|"" "}' >>${path1}/mail.txt

if [ -f ${path1}/mail.txt ]
then
echo "Send mail"
#java -jar SendMail.jar 2
fi

echo ""
end1=$(date)
echo $end1 EndDateTime
timediff1=$(printf "%s\n" $(( $(date -d "$end1" "+%s") - $(date -d "$satrt1" "+%s") )))
echo $timediff1 Sec
echo ""
